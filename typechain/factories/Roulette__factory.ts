/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Roulette, RouletteInterface } from "../Roulette";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "pastBlockTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "spin",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526102e3806100136000396000f3fe6080604052600436106100295760003560e01c806358d02b091461002e578063f0acd7d514610059575b600080fd5b34801561003a57600080fd5b50610043610063565b604051610050919061016f565b60405180910390f35b610061610069565b005b60005481565b678ac7230489e80000341461007d57600080fd5b600054420361008b57600080fd5b426000819055506000600f426100a191906101b9565b036101545760003373ffffffffffffffffffffffffffffffffffffffff16476040516100cc9061021b565b60006040518083038185875af1925050503d8060008114610109576040519150601f19603f3d011682016040523d82523d6000602084013e61010e565b606091505b5050905080610152576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101499061028d565b60405180910390fd5b505b565b6000819050919050565b61016981610156565b82525050565b60006020820190506101846000830184610160565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006101c482610156565b91506101cf83610156565b9250826101df576101de61018a565b5b828206905092915050565b600081905092915050565b50565b60006102056000836101ea565b9150610210826101f5565b600082019050919050565b6000610226826101f8565b9150819050919050565b600082825260208201905092915050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b6000610277601483610230565b915061028282610241565b602082019050919050565b600060208201905081810360008301526102a68161026a565b905091905056fea264697066735822122025e8489481ed59ebec3121b89469294b226f5ec1cbe6cea0c69dd38de0002ecd64736f6c63430008110033";

type RouletteConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RouletteConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Roulette__factory extends ContractFactory {
  constructor(...args: RouletteConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Roulette> {
    return super.deploy(overrides || {}) as Promise<Roulette>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Roulette {
    return super.attach(address) as Roulette;
  }
  override connect(signer: Signer): Roulette__factory {
    return super.connect(signer) as Roulette__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RouletteInterface {
    return new utils.Interface(_abi) as RouletteInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Roulette {
    return new Contract(address, _abi, signerOrProvider) as Roulette;
  }
}
