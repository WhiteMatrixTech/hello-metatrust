/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Bank, BankInterface } from "../../../contracts/Bank.sol/Bank";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Logger",
        name: "_logger",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161043038038061043083398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61039d806100936000396000f3fe6080604052600436106100345760003560e01c806327e235e3146100395780632e1a7d4d14610078578063d0e30db01461009a575b600080fd5b34801561004557600080fd5b506100666100543660046102dc565b60006020819052908152604090205481565b60405190815260200160405180910390f35b34801561008457600080fd5b5061009861009336600461030c565b6100a2565b005b610098610235565b336000908152602081905260409020548111156100fb5760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b60448201526064015b60405180910390fd5b604051600090339083908381818185875af1925050503d806000811461013d576040519150601f19603f3d011682016040523d82523d6000602084013e610142565b606091505b505090508061018a5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016100f2565b33600090815260208190526040812080548492906101a990849061033b565b90915550506001546040516350f9745560e11b815233600482015260248101849052606060448201526008606482015267576974686472617760c01b60848201526001600160a01b039091169063a1f2e8aa9060a401600060405180830381600087803b15801561021957600080fd5b505af115801561022d573d6000803e3d6000fd5b505050505050565b3360009081526020819052604081208054349290610254908490610354565b90915550506001546040516350f9745560e11b815233600482015234602482015260606044820152600760648201526611195c1bdcda5d60ca1b60848201526001600160a01b039091169063a1f2e8aa9060a401600060405180830381600087803b1580156102c257600080fd5b505af11580156102d6573d6000803e3d6000fd5b50505050565b6000602082840312156102ee57600080fd5b81356001600160a01b038116811461030557600080fd5b9392505050565b60006020828403121561031e57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561034e5761034e610325565b92915050565b8082018082111561034e5761034e61032556fea2646970667358221220f65e5c34a5ad6ee7d8eab4b461a1cd0a615e87ca72b609b6f720610a8f0f01e264736f6c63430008110033";

type BankConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BankConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Bank__factory extends ContractFactory {
  constructor(...args: BankConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _logger: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Bank> {
    return super.deploy(_logger, overrides || {}) as Promise<Bank>;
  }
  override getDeployTransaction(
    _logger: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_logger, overrides || {});
  }
  override attach(address: string): Bank {
    return super.attach(address) as Bank;
  }
  override connect(signer: Signer): Bank__factory {
    return super.connect(signer) as Bank__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BankInterface {
    return new utils.Interface(_abi) as BankInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Bank {
    return new Contract(address, _abi, signerOrProvider) as Bank;
  }
}
