/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  GuessTheRandomNumber,
  GuessTheRandomNumberInterface,
} from "../../contracts/GuessTheRandomNumber";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_guess",
        type: "uint256",
      },
    ],
    name: "guess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405261019e806100136000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80639189fec114610030575b600080fd5b61004361003e366004610128565b610045565b005b6000610052600143610141565b604080519140602083015242908201526060016040516020818303038152906040528051906020012060001c9050808203610124576040516000903390670de0b6b3a7640000908381818185875af1925050503d80600081146100d1576040519150601f19603f3d011682016040523d82523d6000602084013e6100d6565b606091505b50509050806101225760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b604482015260640160405180910390fd5b505b5050565b60006020828403121561013a57600080fd5b5035919050565b8181038181111561016257634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212202d325242970172d55f7ae93a85ed995823a5f55d457babdccfbabbe1500864b164736f6c63430008110033";

type GuessTheRandomNumberConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GuessTheRandomNumberConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GuessTheRandomNumber__factory extends ContractFactory {
  constructor(...args: GuessTheRandomNumberConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<GuessTheRandomNumber> {
    return super.deploy(overrides || {}) as Promise<GuessTheRandomNumber>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GuessTheRandomNumber {
    return super.attach(address) as GuessTheRandomNumber;
  }
  override connect(signer: Signer): GuessTheRandomNumber__factory {
    return super.connect(signer) as GuessTheRandomNumber__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GuessTheRandomNumberInterface {
    return new utils.Interface(_abi) as GuessTheRandomNumberInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GuessTheRandomNumber {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GuessTheRandomNumber;
  }
}
