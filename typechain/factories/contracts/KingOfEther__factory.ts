/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  KingOfEther,
  KingOfEtherInterface,
} from "../../contracts/KingOfEther";

const _abi = [
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimThrone",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "king",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506101f0806100206000396000f3fe6080604052600436106100345760003560e01c806369deb7b714610039578063b69ef8a814610043578063cc181ca81461006c575b600080fd5b6100416100a4565b005b34801561004f57600080fd5b5061005960015481565b6040519081526020015b60405180910390f35b34801561007857600080fd5b5060005461008c906001600160a01b031681565b6040516001600160a01b039091168152602001610063565b60015434116101065760405162461bcd60e51b815260206004820152602360248201527f4e65656420746f20706179206d6f726520746f206265636f6d6520746865206b604482015262696e6760e81b60648201526084015b60405180910390fd5b600080546001546040516001600160a01b03909216918381818185875af1925050503d8060008114610154576040519150601f19603f3d011682016040523d82523d6000602084013e610159565b606091505b50509050806101a15760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016100fd565b5034600155600080546001600160a01b0319163317905556fea2646970667358221220786b25b5a0bc561d11be0f7a4779ba0c1eae04592f4ad6f24a169709f60535ac64736f6c63430008110033";

type KingOfEtherConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KingOfEtherConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KingOfEther__factory extends ContractFactory {
  constructor(...args: KingOfEtherConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KingOfEther> {
    return super.deploy(overrides || {}) as Promise<KingOfEther>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): KingOfEther {
    return super.attach(address) as KingOfEther;
  }
  override connect(signer: Signer): KingOfEther__factory {
    return super.connect(signer) as KingOfEther__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KingOfEtherInterface {
    return new utils.Interface(_abi) as KingOfEtherInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KingOfEther {
    return new Contract(address, _abi, signerOrProvider) as KingOfEther;
  }
}
