/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Target, TargetInterface } from "../Target";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isContract",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protected",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pwned",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260008060006101000a81548160ff02191690831515021790555034801561002a57600080fd5b506102a08061003a6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631627905514610046578063834d81851461007657806395f11c0e14610080575b600080fd5b610060600480360381019061005b919061018a565b61009e565b60405161006d91906101d2565b60405180910390f35b61007e6100b1565b005b610088610116565b60405161009591906101d2565b60405180910390f35b600080823b905060008111915050919050565b6100ba3361009e565b156100fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f19061024a565b60405180910390fd5b60016000806101000a81548160ff021916908315150217905550565b60008054906101000a900460ff1681565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101578261012c565b9050919050565b6101678161014c565b811461017257600080fd5b50565b6000813590506101848161015e565b92915050565b6000602082840312156101a05761019f610127565b5b60006101ae84828501610175565b91505092915050565b60008115159050919050565b6101cc816101b7565b82525050565b60006020820190506101e760008301846101c3565b92915050565b600082825260208201905092915050565b7f6e6f20636f6e747261637420616c6c6f77656400000000000000000000000000600082015250565b60006102346013836101ed565b915061023f826101fe565b602082019050919050565b6000602082019050818103600083015261026381610227565b905091905056fea26469706673582212204043f1ce2d0c868a072fbf56bea6c5727da1007d64d845b788bea0bd9e502e4c64736f6c63430008110033";

type TargetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TargetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Target__factory extends ContractFactory {
  constructor(...args: TargetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Target> {
    return super.deploy(overrides || {}) as Promise<Target>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Target {
    return super.attach(address) as Target;
  }
  override connect(signer: Signer): Target__factory {
    return super.connect(signer) as Target__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TargetInterface {
    return new utils.Interface(_abi) as TargetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Target {
    return new Contract(address, _abi, signerOrProvider) as Target;
  }
}
