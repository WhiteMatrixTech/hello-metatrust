/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Wallet, WalletInterface } from "../Wallet";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610452806100536000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063a9059cbb14610059575b600080fd5b610043610075565b6040516100509190610219565b60405180910390f35b610073600480360381019061006e91906102ad565b610099565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614610127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011e9061034a565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405161014d9061039b565b60006040518083038185875af1925050503d806000811461018a576040519150601f19603f3d011682016040523d82523d6000602084013e61018f565b606091505b50509050806101d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ca906103fc565b60405180910390fd5b505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610203826101d8565b9050919050565b610213816101f8565b82525050565b600060208201905061022e600083018461020a565b92915050565b600080fd5b6000610244826101d8565b9050919050565b61025481610239565b811461025f57600080fd5b50565b6000813590506102718161024b565b92915050565b6000819050919050565b61028a81610277565b811461029557600080fd5b50565b6000813590506102a781610281565b92915050565b600080604083850312156102c4576102c3610234565b5b60006102d285828601610262565b92505060206102e385828601610298565b9150509250929050565b600082825260208201905092915050565b7f4e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b60006103346009836102ed565b915061033f826102fe565b602082019050919050565b6000602082019050818103600083015261036381610327565b9050919050565b600081905092915050565b50565b600061038560008361036a565b915061039082610375565b600082019050919050565b60006103a682610378565b9150819050919050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b60006103e66014836102ed565b91506103f1826103b0565b602082019050919050565b60006020820190508181036000830152610415816103d9565b905091905056fea26469706673582212203c4492da8b839037567c955c89ac98245d0b23e80b42e2c3e13e1983ab1c6b1564736f6c63430008110033";

type WalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Wallet__factory extends ContractFactory {
  constructor(...args: WalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Wallet> {
    return super.deploy(overrides || {}) as Promise<Wallet>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Wallet {
    return super.attach(address) as Wallet;
  }
  override connect(signer: Signer): Wallet__factory {
    return super.connect(signer) as Wallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WalletInterface {
    return new utils.Interface(_abi) as WalletInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Wallet {
    return new Contract(address, _abi, signerOrProvider) as Wallet;
  }
}
