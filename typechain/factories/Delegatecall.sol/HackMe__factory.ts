/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { HackMe, HackMeInterface } from "../../Delegatecall.sol/HackMe";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Lib",
        name: "_lib",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "lib",
    outputs: [
      {
        internalType: "contract Lib",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516104283803806104288339818101604052810190610032919061012e565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061015b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e9826100be565b9050919050565b60006100fb826100de565b9050919050565b61010b816100f0565b811461011657600080fd5b50565b60008151905061012881610102565b92915050565b600060208284031215610144576101436100b9565b5b600061015284828501610119565b91505092915050565b6102be8061016a6000396000f3fe60806040526004361061002d5760003560e01c80638da5cb5b146100ba57806392801230146100e55761002e565b5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600036604051610078929190610199565b600060405180830381855af49150503d80600081146100b3576040519150601f19603f3d011682016040523d82523d6000602084013e6100b8565b606091505b005b3480156100c657600080fd5b506100cf610110565b6040516100dc91906101f3565b60405180910390f35b3480156100f157600080fd5b506100fa610134565b604051610107919061026d565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081905092915050565b82818337600083830152505050565b6000610180838561015a565b935061018d838584610165565b82840190509392505050565b60006101a6828486610174565b91508190509392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101dd826101b2565b9050919050565b6101ed816101d2565b82525050565b600060208201905061020860008301846101e4565b92915050565b6000819050919050565b600061023361022e610229846101b2565b61020e565b6101b2565b9050919050565b600061024582610218565b9050919050565b60006102578261023a565b9050919050565b6102678161024c565b82525050565b6000602082019050610282600083018461025e565b9291505056fea264697066735822122031f641e733089dd6f9fced7c3272a594dd448094f3ce3224747bd585305dc05964736f6c63430008110033";

type HackMeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HackMeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HackMe__factory extends ContractFactory {
  constructor(...args: HackMeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _lib: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HackMe> {
    return super.deploy(_lib, overrides || {}) as Promise<HackMe>;
  }
  override getDeployTransaction(
    _lib: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_lib, overrides || {});
  }
  override attach(address: string): HackMe {
    return super.attach(address) as HackMe;
  }
  override connect(signer: Signer): HackMe__factory {
    return super.connect(signer) as HackMe__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HackMeInterface {
    return new utils.Interface(_abi) as HackMeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): HackMe {
    return new Contract(address, _abi, signerOrProvider) as HackMe;
  }
}
