/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Bank, BankInterface } from "../../Bank.sol/Bank";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Logger",
        name: "_logger",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161091e38038061091e833981810160405281019061003291906100ee565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061011b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a98261007e565b9050919050565b60006100bb8261009e565b9050919050565b6100cb816100b0565b81146100d657600080fd5b50565b6000815190506100e8816100c2565b92915050565b60006020828403121561010457610103610079565b5b6000610112848285016100d9565b91505092915050565b6107f48061012a6000396000f3fe6080604052600436106100345760003560e01c806327e235e3146100395780632e1a7d4d14610076578063d0e30db01461009f575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b919061041f565b6100a9565b60405161006d9190610465565b60405180910390f35b34801561008257600080fd5b5061009d600480360381019061009891906104ac565b6100c1565b005b6100a76102d6565b005b60006020528060005260406000206000915090505481565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115610142576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013990610536565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff168260405161016890610587565b60006040518083038185875af1925050503d80600081146101a5576040519150601f19603f3d011682016040523d82523d6000602084013e6101aa565b606091505b50509050806101ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e5906105e8565b60405180910390fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461023c9190610637565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a1f2e8aa33846040518363ffffffff1660e01b81526004016102a09291906106c6565b600060405180830381600087803b1580156102ba57600080fd5b505af11580156102ce573d6000803e3d6000fd5b505050505050565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103249190610702565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a1f2e8aa33346040518363ffffffff1660e01b8152600401610388929190610782565b600060405180830381600087803b1580156103a257600080fd5b505af11580156103b6573d6000803e3d6000fd5b50505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103ec826103c1565b9050919050565b6103fc816103e1565b811461040757600080fd5b50565b600081359050610419816103f3565b92915050565b600060208284031215610435576104346103bc565b5b60006104438482850161040a565b91505092915050565b6000819050919050565b61045f8161044c565b82525050565b600060208201905061047a6000830184610456565b92915050565b6104898161044c565b811461049457600080fd5b50565b6000813590506104a681610480565b92915050565b6000602082840312156104c2576104c16103bc565b5b60006104d084828501610497565b91505092915050565b600082825260208201905092915050565b7f496e73756666696369656e742066756e64730000000000000000000000000000600082015250565b60006105206012836104d9565b915061052b826104ea565b602082019050919050565b6000602082019050818103600083015261054f81610513565b9050919050565b600081905092915050565b50565b6000610571600083610556565b915061057c82610561565b600082019050919050565b600061059282610564565b9150819050919050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b60006105d26014836104d9565b91506105dd8261059c565b602082019050919050565b60006020820190508181036000830152610601816105c5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106428261044c565b915061064d8361044c565b925082820390508181111561066557610664610608565b5b92915050565b610674816103e1565b82525050565b7f5769746864726177000000000000000000000000000000000000000000000000600082015250565b60006106b06008836104d9565b91506106bb8261067a565b602082019050919050565b60006060820190506106db600083018561066b565b6106e86020830184610456565b81810360408301526106f9816106a3565b90509392505050565b600061070d8261044c565b91506107188361044c565b92508282019050808211156107305761072f610608565b5b92915050565b7f4465706f73697400000000000000000000000000000000000000000000000000600082015250565b600061076c6007836104d9565b915061077782610736565b602082019050919050565b6000606082019050610797600083018561066b565b6107a46020830184610456565b81810360408301526107b58161075f565b9050939250505056fea2646970667358221220e4ce636803b8e8b634babf205b43c3caccc65bce748d20859d6045567b72780664736f6c63430008110033";

type BankConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BankConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Bank__factory extends ContractFactory {
  constructor(...args: BankConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _logger: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Bank> {
    return super.deploy(_logger, overrides || {}) as Promise<Bank>;
  }
  override getDeployTransaction(
    _logger: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_logger, overrides || {});
  }
  override attach(address: string): Bank {
    return super.attach(address) as Bank;
  }
  override connect(signer: Signer): Bank__factory {
    return super.connect(signer) as Bank__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BankInterface {
    return new utils.Interface(_abi) as BankInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Bank {
    return new Contract(address, _abi, signerOrProvider) as Bank;
  }
}
